//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: Assets/protoSource/Login.proto
namespace Assets.protoSource.Login
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Login")]
  public partial class Login : global::ProtoBuf.IExtensible
  {
    public Login() {}
    
    private string _UserSName;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"UserSName", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string UserSName
    {
      get { return _UserSName; }
      set { _UserSName = value; }
    }
    private string _PassWord;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"PassWord", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string PassWord
    {
      get { return _PassWord; }
      set { _PassWord = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LoginResult")]
  public partial class LoginResult : global::ProtoBuf.IExtensible
  {
    public LoginResult() {}
    
    private int _Result;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"Result", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Result
    {
      get { return _Result; }
      set { _Result = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}